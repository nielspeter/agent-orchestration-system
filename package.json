{
  "name": "agent-orchestration-system",
  "version": "1.0.0",
  "type": "module",
  "description": "Agent orchestration system where everything is an agent",
  "main": "dist/index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nielspeter/agent-orchestration-system.git"
  },
  "bugs": {
    "url": "https://github.com/nielspeter/agent-orchestration-system/issues"
  },
  "homepage": "https://github.com/nielspeter/agent-orchestration-system#readme",
  "author": "",
  "license": "MIT",
  "scripts": {
    "build": "tsc",
    "dev": "tsx src/index.ts",
    "test:unit": "vitest run --config vitest.config.unit.ts",
    "test:unit:coverage": "vitest run --config vitest.config.unit.ts --coverage",
    "test:integration": "vitest run --config vitest.config.integration.ts",
    "test:integration:werewolf": "vitest run --config vitest.config.integration.ts tests/integration/werewolf-game/",
    "test:integration:critical-illness": "vitest run --config vitest.config.integration.ts tests/integration/critical-illness-claim/workflows/claim-processing.test.ts",
    "test:integration:critical-illness-structured": "vitest run --config vitest.config.integration.ts tests/integration/critical-illness-claim-structured/workflows/claim-processing.test.ts",
    "test:all": "npm run test:unit && npm run test:integration",
    "test:watch": "vitest watch --config vitest.config.unit.ts",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "check": "npm run lint && npm run format:check && npm run test",
    "example:configuration": "tsx examples/configuration.ts",
    "example:critical-illness": "tsx examples/critical-illness-claim.ts",
    "example:default-agent": "tsx examples/default-agent.ts",
    "example:inline-agents": "tsx examples/inline-agents.ts",
    "example:logging": "tsx examples/logging.ts",
    "example:mcp": "tsx examples/mcp-integration.ts",
    "example:orchestration": "tsx examples/orchestration.ts",
    "example:quickstart": "tsx examples/quickstart.ts",
    "example:script-tools": "tsx examples/script-tools.ts",
    "example:session-analyzer": "tsx examples/session-analyzer.ts",
    "example:werewolf": "tsx examples/werewolf-game.ts",
    "example:workflow-pipeline": "tsx examples/workflow-pipeline.ts",
    "clean": "rm -rf dist",
    "trace": "tsx src/tracing/simple-tracer.ts",
    "trace:last": "tsx src/tracing/simple-tracer.ts $(ls -t sessions/*.jsonl | head -1 | xargs basename .jsonl)"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.60.0",
    "@modelcontextprotocol/sdk": "^1.17.4",
    "@types/uuid": "^10.0.0",
    "ai": "^5.0.28",
    "dotenv": "^16.4.5",
    "gray-matter": "^4.0.3",
    "openai": "^4.29.2",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@types/jest": "^30.0.0",
    "@types/node": "^20.11.30",
    "@typescript-eslint/eslint-plugin": "^8.41.0",
    "@typescript-eslint/parser": "^8.41.0",
    "@vitest/coverage-v8": "^2.1.8",
    "eslint": "^9.34.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "jest": "^30.1.3",
    "prettier": "^3.6.2",
    "ts-jest": "^29.4.2",
    "tsx": "^4.7.1",
    "typescript": "^5.9.2",
    "vitest": "^2.1.8"
  }
}
